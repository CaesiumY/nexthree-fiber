/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -t shirt_baked.glb
*/

import { canvasState } from "@/store/canvasState";
import { globalState } from "@/store/globalState";
import { Decal, useGLTF, useTexture } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { dampC } from "maath/easing";
import * as THREE from "three";
import { GLTF } from "three-stdlib";
import { useSnapshot } from "valtio";

type GLTFResult = GLTF & {
  nodes: {
    T_Shirt_male: THREE.Mesh;
  };
  materials: {
    lambert1: THREE.MeshStandardMaterial;
  };
};

const shirtBakedSrc = "/model/shirt_baked.glb";

export function ShirtModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(shirtBakedSrc) as GLTFResult;

  const { logoTexture, fullTexture } = useSnapshot(canvasState);
  const globalSnap = useSnapshot(globalState);

  const logoTextureMap = useTexture(logoTexture.decal);
  const fullTextureMap = useTexture(fullTexture.decal);

  useFrame((_state, delta) =>
    dampC(materials.lambert1.color, globalSnap.themeColor, 0.25, delta)
  );

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.T_Shirt_male.geometry}
        material={materials.lambert1}
        castShadow
        material-roughness={1}
        dispose={null}
      >
        {logoTexture.active ? (
          <Decal
            map={logoTextureMap}
            scale={0.15}
            position={[0, 0.04, 0.15]}
            rotation={[0, 0, 0]}
            map-anisotrophy={16}
            depthTest={false}
            depthWrite={true}
          />
        ) : null}

        {fullTexture.active ? <Decal map={fullTextureMap} /> : null}
      </mesh>
    </group>
  );
}

useGLTF.preload(shirtBakedSrc);
